version: '3.9'
services:
  amazone-ng:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    command: npm run nodemon -- ./src/main.ts
    env_file:
      - ./.env
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
  postgres:
    container_name: postgres_container
    image: postgres:14.8-alpine3.18
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=50'
      - '-c'
      - 'shared_buffers=1GB'
      - '-c'
      - 'effective_cache_size=4GB'
      - '-c'
      - 'work_mem=16MB'
      - '-c'
      - 'maintenance_work_mem=512MB'
      - '-c'
      - 'random_page_cost=1.1'
      - '-c'
      - 'temp_file_limit=10GB'
      - '-c'
      - 'log_min_duration_statement=200ms'
      - '-c'
      - 'idle_in_transaction_session_timeout=10s'
      - '-c'
      - 'lock_timeout=1s'
      - '-c'
      - 'statement_timeout=60s'
      - '-c'
      - 'shared_preload_libraries=pg_stat_statements'
      - '-c'
      - 'pg_stat_statements.max=10000'
      - '-c'
      - 'pg_stat_statements.track=all'
    environment:
      POSTGRES_DB: ${TYPEORM_DATABASE:-db}
      POSTGRES_USER: ${TYPEORM_USERNAME:-pguser}
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD:-pgpassword}
      PGDATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      #  - ../2. Init Database:/docker-entrypoint-initdb.d
      - ./postgresql-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${TYPEORM_USERNAME:-pguser} -d amazone-ng',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: ${MAIL_USER:-example@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${TYPEORM_PASSWORD:-pgpassword}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - '5050:80'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  postgres_exporter:
    container_name: exporter_container
    image: prometheuscommunity/postgres-exporter:v0.10.1
    environment:
      DATA_SOURCE_URI: 'postgres:5432/amazone-ng?sslmode=disable'
      DATA_SOURCE_USER: ${TYPEORM_USERNAME:-pguser}
      DATA_SOURCE_PASS: ${TYPEORM_PASSWORD:-pgpassword}
      PG_EXPORTER_EXTEND_QUERY_PATH: '/etc/postgres_exporter/queries.yaml'
    volumes:
      - ./postgresql-data/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - '9187:9187'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    networks:
      - postgres

volumes:
  amazone-ng-data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge
